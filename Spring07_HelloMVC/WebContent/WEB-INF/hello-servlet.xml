<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">

	<!-- 일반적으로 스프링에서 클래스를 만들고 , 의존성주입은 @Autowired를 통해 클래스 생성을 처리한다.
	그런데, Autowired하기 위해서는 application-context.xml에 해당 클래스 모두를 bean으로 등록해두어야 하는데, 이러한 과정이
	번거로우므로  <context:component-scan>을 이용하여 처리하게 해주는 것. -->
	<context:component-scan base-package="com.hello.mvc"></context:component-scan>
	

	<!-- mvc 에 관련된 annotation들을 관리하겠다. -->
	<!-- 
		Spring MVC 컴포넌트들을 디폴트 설정을 통해 활성화한다.
		Spring MVC @Controller에 요청을 보내기 위해 필요한 HandlerMapping과 HandlerAdapter를 Bean으로 등록한다.
		HandlerMapping : HTTP 요청정보를 이용해서 컨트롤러를 찾아주는 기능
		HandlerAdapter : HandlerMapping을 통해 찾은 컨트롤러를 직접 실행하는 기능을 수행
		Bean을 생성하기 위해 xml 파일에 context:component-scan을 명시하면 이 태그를 포함하지 않아도 MVC 어플리케이션을 작동한다.
	 -->
	<mvc:annotation-driven/>
	
</beans>
