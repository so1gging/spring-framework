<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.5" xmlns="http://java.sun.com/xml/ns/javaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee https://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">

	<!-- ( 1 )
		톰캣을 실행하기 전에 개발자는 톰캣의 설정파일인 web.xml 파일에 <context-param>으로 전역 파라미터를 설정합니다.
		파라미터의 이름은 contextConfigLocation이고 ,
		어떤 객체들을 미리 만들어 놓을지가 작성된 설정파일의 경로를 값으로 할당해 놓습니다. -->
		
	<!-- Context parameter ( 전역 파라미터 ) -->	
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>/WEB-INF/spring/appServlet/applicationContext.xml</param-value>
	</context-param>
	

	<!-- ( 2 )
		이어서, 톰캣이 실행되면 수행할 클래스(리스너)의 이름을 같은 파일인 web.xml에 작성.
		톰캣을 실행하면 <listener>가 등록되어 있는 ContextLoaderListner 객체를 호출하는데,
		이 객체는 내부적으로 부모 객체를 실행한다.

		부모 객체는 ContextLoader이며 이 객체에서 Root Application Context를 생성하는데,
		이 컨테이너에는 웹과 관련이 없는 객체들을 저장합니다.

		예를들면 DAO 객체들은 웹과 직접적인 관련이 없는 객체입니다.
		단지 DB에 접근하기 위한 객체들일 뿐이죠.
	 -->
	 <!-- Context Loader Listner -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	<!-- Dispatcher Servlet(Front controller) -->
	<servlet>
		<servlet-name>appServlet</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>/WEB-INF/spring/appServlet/servlet-context.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
		
	<servlet-mapping>
		<servlet-name>appServlet</servlet-name>
		<url-pattern>*.do</url-pattern>
	</servlet-mapping>
	
		<!-- 설정된 값을 encoding하겠다. -->
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

</web-app>
